{
  "provider": {
    "name": "ProductService"
  },
  "consumer": {
    "name": "ProductCatalogue"
  },
  "interactions": [
    {
      "description": "get all products with no auth token",
      "request": {
        "method": "GET",
        "path": "/products"
      },
      "response": {
        "status": 401
      }
    },
    {
      "description": "get product by ID with no auth token",
      "request": {
        "method": "GET",
        "path": "/product/10"
      },
      "response": {
        "status": 401
      }
    },
    {
      "description": "get all products",
      "request": {
        "method": "GET",
        "path": "/products",
        "headers": {
          "Authorization": "Bearer AAABd9yHUjI="
        },
        "matchingRules": {
          "header": {
            "Authorization": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "Bearer [a-zA-Z0-9=\\+/]+"
                }
              ],
              "combine": "AND"
            }
          }
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json; charset=UTF-8"
        },
        "body": {
          "products": [

          ]
        },
        "matchingRules": {
          "header": {
            "Content-Type": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "application/json(;\\s?charset=[\\w\\-]+)?"
                }
              ],
              "combine": "AND"
            }
          }
        }
      },
      "providerStates": [
        {
          "name": "no products exists"
        }
      ]
    },
    {
      "description": "get product with ID 10",
      "request": {
        "method": "GET",
        "path": "/product/10",
        "headers": {
          "Authorization": "Bearer AAABd9yHUjI="
        },
        "matchingRules": {
          "header": {
            "Authorization": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "Bearer [a-zA-Z0-9=\\+/]+"
                }
              ],
              "combine": "AND"
            }
          }
        }
      },
      "response": {
        "status": 404
      },
      "providerStates": [
        {
          "name": "product with ID 10 does not exist",
          "params": {
            "id": 10
          }
        }
      ]
    },
    {
      "description": "get product with ID 10",
      "request": {
        "method": "GET",
        "path": "/product/10",
        "headers": {
          "Authorization": "Bearer AAABd9yHUjI="
        },
        "matchingRules": {
          "header": {
            "Authorization": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "Bearer [a-zA-Z0-9=\\+/]+"
                }
              ],
              "combine": "AND"
            }
          }
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json; charset=UTF-8"
        },
        "body": {
          "code": "CC_001",
          "name": "28 Degrees",
          "id": 10,
          "type": "CREDIT_CARD",
          "version": "v1"
        },
        "matchingRules": {
          "body": {
            "$.id": {
              "matchers": [
                {
                  "match": "integer"
                }
              ],
              "combine": "AND"
            },
            "$.name": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.type": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.code": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.version": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            }
          },
          "header": {
            "Content-Type": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "application/json(;\\s?charset=[\\w\\-]+)?"
                }
              ],
              "combine": "AND"
            }
          }
        }
      },
      "providerStates": [
        {
          "name": "product with ID 10 exists",
          "params": {
            "id": 10
          }
        }
      ]
    },
    {
      "description": "get all products",
      "request": {
        "method": "GET",
        "path": "/products",
        "headers": {
          "Authorization": "Bearer AAABd9yHUjI="
        },
        "matchingRules": {
          "header": {
            "Authorization": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "Bearer [a-zA-Z0-9=\\+/]+"
                }
              ],
              "combine": "AND"
            }
          }
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json; charset=UTF-8"
        },
        "body": {
          "products": [
            {
              "name": "Gem Visa",
              "id": 9,
              "type": "CREDIT_CARD"
            },
            {
              "name": "Gem Visa",
              "id": 9,
              "type": "CREDIT_CARD"
            }
          ]
        },
        "matchingRules": {
          "body": {
            "$.products": {
              "matchers": [
                {
                  "match": "type",
                  "min": 1
                }
              ],
              "combine": "AND"
            },
            "$.products[*].id": {
              "matchers": [
                {
                  "match": "integer"
                }
              ],
              "combine": "AND"
            },
            "$.products[*].name": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.products[*].type": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            }
          },
          "header": {
            "Content-Type": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "application/json(;\\s?charset=[\\w\\-]+)?"
                }
              ],
              "combine": "AND"
            }
          }
        }
      },
      "providerStates": [
        {
          "name": "products exists"
        }
      ]
    }
  ],
  "metadata": {
    "pactSpecification": {
      "version": "3.0.0"
    },
    "pact-jvm": {
      "version": "4.1.7"
    }
  }
}
